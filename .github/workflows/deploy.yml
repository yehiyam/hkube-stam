name: Deployer
on:
  issue_comment:
    type: [created]

jobs:
  deploy-check:
    runs-on: ubuntu-latest
    steps:
      - id: check
        name: check for deployment command
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: '/deploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  deployment:
    runs-on: ubuntu-latest
    needs: deploy-check
    if: needs.deploy-check.outputs.triggered == 'true'
    steps:
    - name: get pull request ref
      id: get_pull_request_ref
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repository/pulls/:issue_id
        repository: ${{ github.repository }}
        issue_id: ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: create deployment
      id: create_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments
        repository: ${{ github.repository }}
        ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
        environment: dev
        auto_merge: false
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: set deployment status to in progress
      id: start_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments/:deployment/statuses
        repository: ${{ github.repository }}
        deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
        environment: dev
        environment_url: https://example.com
        log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        state: in_progress
        mediaType: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
# on:
#   pull_request:
#     branches:
#       - master
#   workflow_dispatch:
#     inputs:
#       prNumber:
#         description: 'The PR number to build'
#         required: true


# jobs:
#   deploy_job:
#     runs-on: ubuntu-latest
#     name: build and deploy
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Checkout Helm
#       uses: actions/checkout@v2
#       with:
#         repository: kube-HPC/helm
#         path: helm
#         ref: ${{ github.head_ref || github.ref }}
#     - name: Docker login
#       run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
#     - name: changed
#       id: changed
#       uses: yehiyam/deploy-to-k8s@master
#       with:
#         repo-token: "${{ secrets.GITHUB_TOKEN }}"
#     - uses: actions/upload-artifact@v2
#       with:
#         name: values.yaml
#         path: helm/hkube/values.yaml
   
