name: Deploy
on:
  deployment
jobs:
  build_job:
    runs-on: ubuntu-latest
    name: build dockers
    if: ${{ github.event.deployment.environment == 'dev' }}
    steps:
    - name: set deployment status to in progress
      id: start_deployment
      uses: octokit/request-action@v2.x
      with:
        route: POST /repos/:repository/deployments/:deployment/statuses
        repository: ${{ github.repository }}
        deployment: ${{ github.event.deployment.id }}
        environment: dev
        environment_url: https://example.com
        log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        state: in_progress
        mediaType: '{"previews": ["flash", "ant-man"]}'
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: Checkout
      uses: actions/checkout@v2
    - name: stam
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
        
    - name: Checkout helm
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git clone "https://${{ secrets.GH_TOKEN }}@github.com/yehiyam/helm.git" "$HOME/helm"
        cd $HOME/helm
        git checkout ${{ github.event.deployment.ref }}
        git status
    - name: Docker login
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
    - name: changed
      id: changed
      uses: yehiyam/deploy-to-k8s@master
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        prNumber: ${{ github.event.deployment.payload.prNumber }}
        branchName: ${{ github.event.ref }}
    - uses: actions/upload-artifact@v2
      with:
        name: values.yaml
        path: $HOME/helm/hkube/values.yaml
    - name: update helm repo
      run: |
        cd $HOME/helm/hkube
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        set +e
        git diff --exit-code --quiet
        if [ "$?" == 1 ]; then
          set -e
          git add values.yaml
          git commit -m "update version [skip ci]"
          git push
        fi
    - name: get-helm
      run: |
        curl -LO https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz
        tar -zxvf helm-v3.2.4-linux-amd64.tar.gz
        mv linux-amd64/helm $HOME/helm3
    - name: package
      run: |
        cd $HOME/helm/hkube
        $HOME/helm3 package . --app-version=${{ steps.changed.outputs.version}} --version=${{ steps.changed.outputs.version}} -d /tmp/
        mv /tmp/hkube-${{ steps.changed.outputs.version}}.tgz /tmp/chart.tgz
    - uses: actions/upload-artifact@v2
      with:
        name: chart.tgz
        path: /tmp/chart.tgz
    outputs:
      chart: chart.tgz
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_job
    name: build and deploy
    steps:
    - name: download chart
      uses: actions/download-artifact@v2
      with:
        name: ${{ needs.build_job.outputs.chart }}
    - name: deploy
      uses: 'deliverybot/helm@v1'
      with:
        chart: "${{ GITHUB_WORKSPACE }}/${{ needs.build_job.outputs.chart }}"
        release: 'hkube' 
        namespace: default
        helm: helm3
        token: "${{ secrets.GITHUB_TOKEN }}"
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
